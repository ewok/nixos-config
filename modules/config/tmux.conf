run-shell ~/.tmux/ressurect/resurrect.tmux

# brew install reattach-to-user-namespace
set-option -g default-command "which reattach-to-user-namespace &> /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
set-option -g repeat-time 1000

# Main options
set-window-option -g mode-keys vi
set-option -g status-keys vi

set -g base-index 1
setw -g pane-base-index 1

set-option -g focus-events on

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set-option -g default-terminal "screen-256color"

if-shell '[ "$TERM" = "screen-256color" ]' ' \
set-option -ga terminal-overrides ",screen-256color:Tc"'

if-shell '[ "$TERM" = "xterm-256color" ]' ' \
set-option -ga terminal-overrides ",xterm-256color:Tc"'

if-shell '[ "$TERM" = "xterm-termite" ]' ' \
set-option -ga terminal-overrides ",xterm-termite:Tc"'

if-shell '[ "$TERM" = "xterm-kitty" ]' ' \
set-option -ga terminal-overrides ",xterm-kitty:Tc"'

if-shell '[ "$TERM" = "alacritty" ]' ' \
set-option -ga terminal-overrides ",alacritty:Tc"'

if-shell '[ "$TERM" = "screen" ]' ' \
set-option -ga terminal-overrides ",screen:Tc"'

set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Keybindings
set -s escape-time 10

set -g prefix `
bind ` send-prefix
bind-key ` last-window
unbind %
unbind '"'
unbind x
unbind C-o
unbind k
unbind j
unbind h
unbind l
# unbind {
# unbind }

bind-key d detach -E false

# bind-key -T copy-mode-vi S-PageUp send-keys -X halfpage-up
# bind-key -T copy-mode-vi S-PageDown send-keys -X halfpage-down
bind-key -n S-PageUp copy-mode -u
bind-key -n S-PageDown send-keys Pagedown

bind-key v split-window -h
bind-key s split-window -v
bind-key a send-keys `
bind-key C-S choose-session

bind-key n next-window
bind-key b previous-window
bind-key p previous-window

bind-key X kill-pane
bind-key K confirm-before kill-window
bind-key S choose-window "join-pane -v -t "%%""
bind-key V choose-window "join-pane -h -t "%%""
bind-key B break-pane

bind-key -r L swap-pane -D
bind-key -r H swap-pane -U

bind-key -r h swap-window -t -1
bind-key -r l swap-window -t +1

# setw -g xterm-keys on
set-option -g xterm-keys on

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# # bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# # bind-key -T copy-mode-vi C-\ select-pane -l

bind-key -r -T prefix C-k           resize-pane -U 1
bind-key -r -T prefix C-j           resize-pane -D 1
bind-key -r -T prefix C-h           resize-pane -L 1
bind-key -r -T prefix C-l           resize-pane -R 1

bind-key -r -T prefix Space next-layout

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# Other

bind-key = setw synchronize-panes on
bind-key - setw synchronize-panes off

# Select mode
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

set -g history-limit 100000

######################
### DESIGN CHANGES ###
######################

# Status update interval
set -g status-interval 1

# Basic status bar colors
set -g status-style fg=colour013,bg=colour000

# Left side of status bar
set -g status-left-style bg=colour000,fg=colour013
set -g status-left-length 40
set -g status-left "#[fg=colour010,bg=colour006,bold] #S #[fg=colour006,bg=colour009,nobold]#[fg=colour010,bg=colour009] #(whoami) #[fg=colour009,bg=colour002]#[fg=colour010,bg=colour002] #I:#P #[fg=colour002,bg=colour000,nobold]"

# Right side of status bar
set -g status-right-style bg=colour010,fg=colour012
set -g status-right-length 150
set -g status-right "#[fg=colour002,bg=colour000]#[fg=colour010,bg=colour002] %H:%M:%S #[fg=colour009,bg=colour002]#[fg=colour010,bg=colour009] %d-%b-%y #[fg=colour006,bg=colour009]#[fg=colour010,bg=colour006,bold] #H "

# Window status
set -g window-status-format " #I:#W#F "
set -g window-status-current-format "#[fg=colour006,bg=colour000]#[fg=colour010,bg=colour006,bold] #I:#W#F #[fg=colour006,bg=colour000,nobold]"

# Current window status
set -g window-status-current-style bg=colour006,fg=colour010

# Window with activity status
set -g window-status-activity-style bg=colour001,fg=colour010

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify centre

# Pane border
set -g pane-border-style bg=default,fg=colour006

# Active pane border
set -g pane-active-border-style bg=default,fg=colour001

# Pane number indicator
set -g display-panes-colour colour006
set -g display-panes-active-colour colour001

# Clock mode
set -g clock-mode-colour colour001
# set -g clock-mode-style 24

# Message
set -g message-style bg=colour010,fg=colour006

# Command message
set -g message-command-style bg=colour010,fg=colour006

# Mode
set -g mode-style bg=colour001,fg=colour010

if-shell '[ "$INSIDE_EMACS" = "vterm" ]' ' \
set-option -g status off
'
