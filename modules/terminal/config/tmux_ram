#!/usr/bin/env bash

export LC_ALL=en_US.UTF-8

normalize_padding() {
	percent_len=${#1}
	max_len=${2:-5}
	let diff_len=$max_len-$percent_len
	# if the diff_len is even, left will have 1 more space than right
	let left_spaces=($diff_len + 1)/2
	let right_spaces=($diff_len)/2
	printf "%${left_spaces}s%s%${right_spaces}s\n" "" $1 ""
}

current_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

get_percent() {
	case $(uname -s) in
	Linux)
		total_mem=$(free -g | awk '/^Mem/ {print $2}')
		used_mem=$(free -g | awk '/^Mem/ {print $3}')
		memory_percent=$(((used_mem * 100) / total_mem))
		echo "$memory_percent"
		;;
	Darwin)
		used_mem=$(vm_stat | grep ' active\|wired ' | sed 's/[^0-9]//g' | paste -sd ' ' - | awk -v pagesize=$(pagesize) '{printf "%d\n", ($1+$2) * pagesize / 1048576}')
		total_mem=$(system_profiler SPHardwareDataType | grep "Memory:" | awk '{print $2}')
		memory_percent=$(((used_mem) / total_mem / 10))
		echo "$memory_percent"
		;;
	FreeBSD)
		hw_pagesize="$(sysctl -n hw.pagesize)"
		mem_inactive="$(($(sysctl -n vm.stats.vm.v_inactive_count) * hw_pagesize))"
		mem_unused="$(($(sysctl -n vm.stats.vm.v_free_count) * hw_pagesize))"
		mem_cache="$(($(sysctl -n vm.stats.vm.v_cache_count) * hw_pagesize))"

		free_mem=$(((mem_inactive + mem_unused + mem_cache) / 1024 / 1024))
		total_mem=$(($(sysctl -n hw.physmem) / 1024 / 1024))
		used_mem=$((total_mem - free_mem))
		memory_percent=$(((used_mem * 100) / total_mem))
		echo "$memory_percent"
		;;
	CYGWIN* | MINGW32* | MSYS* | MINGW*) ;; # TODO - windows compatibility
	esac
}

main() {
	RATE=30
	ram_label="ï‹›"
	ram_percent=$(get_percent)
	if [ -n "$ram_percent" ]; then
		if [ "$ram_percent" -gt 80 ]; then
			ram_color="#[fg=#e06c75]"
		fi
		ram_percent=$(normalize_padding "$ram_percent%")

		echo "$ram_color$ram_label ${ram_percent}"
	fi
	sleep "$RATE"
}

main
