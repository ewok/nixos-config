#run-shell ~/.tmux/ressurect/resurrect.tmux

# brew install reattach-to-user-namespace
#set-option -g default-command "which reattach-to-user-namespace &> /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Plugins
# if "test ! -d ~/.tmux/plugins/tpm" \
#    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-yank'
set-option -g detach-on-destroy off

set -g history-limit 1000000
set -g set-clipboard on

set-option -g allow-passthrough on

set-option -g repeat-time 1000

# Main options
set-window-option -g mode-keys vi
set-option -g status-keys vi

set -g base-index 1
setw -g pane-base-index 1

# set -g renumber-windows on
setw -g automatic-rename on
set -g set-titles on

set-option -g focus-events on

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set-option -g default-terminal "{{ conf.terminal }}"

set -ga terminal-overrides ",xterm-256color*:Tc"
set -ga terminal-overrides ",screen-256color*:Tc"
set -ga terminal-overrides ",xterm-termite*:Tc"
set -ga terminal-overrides ",xterm-kitty*:Tc"
set -ga terminal-overrides ",alacritty*:Tc"
set -ga terminal-overrides ",screen*:Tc"
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# Keybindings
set -s escape-time 10

set -g prefix `
bind ` send-prefix
bind-key ` last-window
unbind %
unbind '"'
unbind x
unbind C-o
unbind k
unbind j
unbind h
unbind l
unbind t
unbind f
unbind-key -T copy-mode-vi v

bind r source-file ~/.config/tmux/tmux.conf \; display "::::  Tmux conf reloaded :) ::::"

bind-key d detach -E false

# bind-key -T copy-mode-vi S-PageUp send-keys -X halfpage-up
# bind-key -T copy-mode-vi S-PageDown send-keys -X halfpage-down
bind-key -n S-PageUp copy-mode -u
bind-key -n S-PageDown send-keys Pagedown

bind-key v split-window -h
bind-key s split-window -v
bind-key a send-keys `
bind-key Tab choose-session

bind-key n next-window
bind-key p previous-window

bind-key X kill-pane
bind-key K confirm-before kill-window
bind-key S choose-window "join-pane -v -t "%%""
bind-key V choose-window "join-pane -h -t "%%""
bind-key b break-pane

bind-key Space resize-pane -Z

bind-key -r L swap-pane -D
bind-key -r H swap-pane -U

bind-key -r h swap-window -t -1
bind-key -r l swap-window -t +1

# setw -g xterm-keys on
set-option -g xterm-keys on

bind-key -r -T prefix C-k           resize-pane -U 1
bind-key -r -T prefix C-j           resize-pane -D 1
bind-key -r -T prefix C-h           resize-pane -L 1
bind-key -r -T prefix C-l           resize-pane -R 1

bind-key -r -T prefix \\ next-layout

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

is_pro="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|vifm)(diff)?$'"
bind-key -n 'C-u' if-shell "$is_pro" 'send-keys C-u'  'copy-mode -u'
bind-key -n 'C-y' if-shell "$is_pro" 'send-keys C-y'  'copy-mode'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
bind -T copy-mode-vi 'C-y' send-keys -X scroll-up \; send -X refresh-from-pane
bind -T copy-mode-vi 'C-e' send-keys -X scroll-down \; send -X refresh-from-pane

# Toggle term
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space'  'run-shell -b "~/.config/tmux/tmux_toggle"'
bind-key t run-shell -b "~/.config/tmux/tmux_toggle '' false"
bind-key f run-shell -b "~/.config/tmux/tmux_toggle '' true"

# Other

bind-key = setw synchronize-panes on
bind-key - setw synchronize-panes off

bind-key o run-shell "sesh connect \"$(
	sesh list| grep -v '^popup' | fzf-tmux -p 55%,60% \
		--border-label ' sesh ' --prompt '‚ö°  ' \
		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t|grep -v \'^popup\')' \
		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -L -H -d 5 -t d -E .Trash -E .git -E .cache . ~)' \
		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)' \
		--bind 'ctrl-e:execute(zoxide-rm {})+change-prompt(‚ö°  )+reload(sesh list -z)'
)\""

bind-key Enter new-session -c ~/

# Select mode
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
 bind-key -T copy-mode-vi 'v' send -X begin-selection
 bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
 bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel

######################
### DESIGN CHANGES ###
######################

# set -g status-left ' [ #[fg=red]#S#[default] ] '
set -g status-right-length 130
set -g status-right  '#[default]#[fg=#{{ conf.colors.base0C }}]#(~/.config/tmux/tmux_cpu)#(~/.config/tmux/tmux_ram) #(~/.config/tmux/tmux_blocks) #(~/.config/tmux/tmux_network) #(~/.config/tmux/tmux_battery)#[default] '

set -g status-position top

# Status update interval
set -g status-interval 60

# Basic status bar colors
set -g status-style fg=#{{ conf.colors.base07 }},bg=default

# Left side of status bar
set -g status-left-length 40
set -g status-left "#[fg=#{{ conf.colors.base09 }},bg=default] #S "

# Window status
# set -g window-status-format "#[fg=#{{ conf.colors.base04 }},bg=#{{ conf.colors.base00 }}] #I:#W "
# set -g window-status-current-format "#[fg=#{{ conf.colors.base00 }},bg=#{{ conf.colors.base0B }},bold] #I:#W #[fg=#{{ conf.colors.base0B }},bg=#{{ conf.colors.base00 }},nobold]{{ conf.theme.separator_left }}"
set -g window-status-format "#[fg=#{{ conf.colors.base04 }},bg=default] #I:#W "
set -g window-status-current-format "#[fg=#{{ conf.colors.base0B }},bg=default,bold] #I:#W "

set -g window-status-style bg=default,fg=#{{ conf.colors.base07 }}

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify left

# Pane border
set -g pane-border-style bg=default,fg=#{{ conf.colors.base03 }}

# Active pane border
set -g pane-active-border-style bg=default,fg=#{{ conf.colors.base0E }}

# Pane number indicator
set -g display-panes-colour colour006
set -g display-panes-active-colour colour001

# Clock mode
set -g clock-mode-colour colour001

# Message
set -g message-style bg=default,fg=#{{ conf.colors.base04 }}

# Command message
set -g message-command-style bg=default,fg=#{{ conf.colors.base04 }}

# Mode
set -g mode-style bg=#{{ conf.colors.base05 }},fg=#{{ conf.colors.base00 }}
