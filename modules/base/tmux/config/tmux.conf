run-shell ~/.tmux/ressurect/resurrect.tmux

# brew install reattach-to-user-namespace
set-option -g default-command "which reattach-to-user-namespace &> /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
set-option -g repeat-time 1000

# Main options
set-window-option -g mode-keys vi
set-option -g status-keys vi
# set -g base-index 1
set-option -g focus-events on

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# set -g default-terminal "screen-256color"

if-shell '[ "$TERM" = "screen-256color" ]' ' \
set-option -ga terminal-overrides ",screen-256color:RGB"'

if-shell '[ "$TERM" = "xterm-termite" ]' ' \
set-option -ga terminal-overrides ",xterm-termite:Tc"'

if-shell '[ "$TERM" = "xterm-kitty" ]' ' \
set-option -ga terminal-overrides ",xterm-kitty:Tc"'

if-shell '[ "$TERM" = "alacritty" ]' ' \
set-option -ga terminal-overrides ",alacritty:Tc"'

set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Keybindings
# set -s escape-time 0

set -g prefix `
bind ` send-prefix
bind-key ` last-window
unbind %
unbind '"'
unbind x
unbind C-o
unbind k
unbind j
unbind h
unbind l
# unbind {
# unbind }

# bind-key -T copy-mode-vi S-PageUp send-keys -X halfpage-up
# bind-key -T copy-mode-vi S-PageDown send-keys -X halfpage-down
bind-key -n S-PageUp copy-mode -u
bind-key -n S-PageDown send-keys Pagedown

bind-key v split-window -h
bind-key s split-window -v
bind-key a send-keys `
bind-key C-S choose-session

bind-key -r n next-window
bind-key -r b previous-window
bind-key -r p previous-window

bind-key X kill-pane
bind-key K confirm-before kill-window
bind-key S choose-window "join-pane -v -t "%%""
bind-key V choose-window "join-pane -h -t "%%""
bind-key B break-pane

bind-key -r L swap-pane -D
bind-key -r H swap-pane -U

bind-key -r h swap-window -t -1
bind-key -r l swap-window -t +1

# setw -g xterm-keys on
set-option -g xterm-keys on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

bind-key -r -T prefix C-k           resize-pane -U 1
bind-key -r -T prefix C-j           resize-pane -D 1
bind-key -r -T prefix C-h           resize-pane -L 1
bind-key -r -T prefix C-l           resize-pane -R 1

bind-key -r -T prefix Space next-layout

# Other

bind-key C-t new-window "gotty_tm"
bind-key = setw synchronize-panes on
bind-key - setw synchronize-panes off

# Select mode
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# set -g history-limit 100000


######################
### DESIGN CHANGES ###
######################

# Status update interval
set -g status-interval 1

# Basic status bar colors
set -g status-style fg=colour238,bg=colour233

# Left side of status bar
set -g status-left-style bg=colour233,fg=colour243
set -g status-left-length 40
set -g status-left "#[fg=colour232,bg=colour245,bold] #S #[fg=colour245,bg=colour240,nobold]#[fg=colour233,bg=colour240] #(whoami) #[fg=colour240,bg=colour235]#[fg=colour240,bg=colour235] #I:#P #[fg=colour235,bg=colour233,nobold]"

# Right side of status bar
set -g status-right-style bg=colour233,fg=colour243
set -g status-right-length 150
set -g status-right "#[fg=colour235,bg=colour233]#[fg=colour240,bg=colour235] %H:%M:%S #[fg=colour240,bg=colour235]#[fg=colour233,bg=colour240] %d-%b-%y #[fg=colour245,bg=colour240]#[fg=colour232,bg=colour245,bold] #H "

# Window status
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "

# Current window status
set -g window-status-current-style bg=colour245,fg=colour232

# Window with activity status
set -g window-status-activity-style bg=colour233,fg=colour245

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify centre

# Pane border
set -g pane-border-style bg=default,fg=colour235

# Active pane border
set -g pane-active-border-style bg=default,fg=colour100

# Pane number indicator
set -g display-panes-colour colour233
set -g display-panes-active-colour colour245

# Clock mode
set -g clock-mode-colour colour240
# set -g clock-mode-style 24

# Message
set -g message-style bg=colour245,fg=colour232

# Command message
set -g message-command-style bg=colour233,fg=colour250

# Mode
set -g mode-style bg=colour243,fg=colour232
